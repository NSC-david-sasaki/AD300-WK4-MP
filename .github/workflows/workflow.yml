name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
    tags: [ "*" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-test:

    runs-on: ubuntu-latest
    env:
      ORG_GRADLE_TERMS_OF_SERVICE_CONSENT: yes
      GH_TOKEN: ${{ github.token }}

    permissions:
      contents: write
      actions: read
      security-events: write   # Grants access to dependency graph

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: gradle

      - name: Set up Gradle Validation
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable (Linux only)
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: gradle wrapper && ./gradlew build --no-daemon

      - name: Run Tests
        run: ./gradlew test --no-daemon

      - name: Generate Dependency Graph
        run: ./gradlew :app:dependencies --configuration compileClasspath

      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@v4

      - name: Upload JAR file as artifact
        if: ${{ success() }} # Only run this step if the previous steps succeeded
        uses: actions/upload-artifact@v4
        with:
          name: application-jar
          path: app/build/libs/*.jar
      
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          tag_name=${GITHUB_REF##*/}
          release_response=$(curl -s -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "tag_name": "'$tag_name'",
              "name": "Release '$tag_name'",
              "body": "Release notes for version '$tag_name'",
              "draft": false,
              "prerelease": false
            }' \
            "https://api.github.com/repos/${{ github.repository }}/releases")
          release_id=$(echo "$release_response" | jq -r '.id')
          echo "Created release with ID: $release_id"
          echo "::set-output name=release_id::$release_id"

      - name: Upload Artifact to Release
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          artifact_path=$(ls app/build/libs/*.jar)
          artifact_name=$(basename $artifact_path)
          gh release upload ${{ github.ref_name }} "$artifact_path" --clobber