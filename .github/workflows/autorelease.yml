# .github/workflows/workflow-b.yml
name: Auto Release

on:
  workflow_run:
    workflows: ["Java CI with Gradle"]  # Trigger after workflow.yml completes
    types:
      - completed

jobs:
  download-and-upload-artifacts:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' && startsWith(github.ref, 'refs/tags/')  # Only run if the previous workflow was successful and the push is a tag

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Get artifacts from Workflow A
      run: |
        # Get the workflow run ID of the workflow run we want to pull the artifact from
        workflow_run_id=$(curl -s \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/actions/workflows/workflow-a.yml/runs" \
          | jq -r '.workflow_runs[0].id')
        
        echo "Workflow Run ID: $workflow_run_id"

        # Get the list of artifact IDs from the workflow run
        artifacts=$(curl -s \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/actions/runs/$workflow_run_id/artifacts" \
          | jq -r '.artifacts[] | {id: .id, name: .name}')

        echo "Artifacts: $artifacts"

        # Loop through each artifact and download it
        for artifact in $(echo "$artifacts" | jq -r 'keys[]'); do
          artifact_id=$(echo "$artifacts" | jq -r ".[$artifact].id")
          artifact_name=$(echo "$artifacts" | jq -r ".[$artifact].name")
          
          echo "Downloading artifact: $artifact_name"

          # Download the artifact
          curl -L \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/$artifact_id/zip" \
            -o "${artifact_name}.zip"
        done

    - name: Create GitHub release
      run: |
        # Extract the tag name from the reference
        tag_name=${GITHUB_REF##*/}
        
        # Create a GitHub release
        release_response=$(curl -s -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d '{
            "tag_name": "'$tag_name'",
            "name": "Release '$tag_name'",
            "body": "Release notes for version '$tag_name'",
            "draft": false,
            "prerelease": false
          }' \
          "https://api.github.com/repos/${{ github.repository }}/releases")

        # Get the release ID from the response
        release_id=$(echo "$release_response" | jq -r '.id')

        echo "Created release with ID: $release_id"

    - name: Upload artifacts to release
      run: |
        # Extract the tag name from the reference
        tag_name=${GITHUB_REF##*/}
        
        # Upload each downloaded artifact as part of the release
        for artifact in $(ls *.zip); do
          echo "Uploading $artifact to release"
          
          # Upload the artifact to the release
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/zip" \
            --data-binary @$artifact \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/$release_id/assets?name=$(basename $artifact)"
        done
